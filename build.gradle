plugins {
    id 'org.springframework.boot' version '2.6.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.palantir.docker' version '0.33.0'
    id 'com.palantir.docker-run' version '0.33.0'
}

group = 'com.messenger'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:2.6.7'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.6.7'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.6.7'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.6.7'
    implementation 'org.springframework.security:spring-security-messaging:5.6.3'
    implementation 'com.auth0:java-jwt:3.19.1'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.8'
    implementation 'org.springdoc:springdoc-openapi-security:1.6.8'
    implementation 'org.springframework.data:spring-data-elasticsearch:4.3.4'
    implementation 'org.springframework.boot:spring-boot-configuration-processor:2.6.7'
    implementation 'org.projectlombok:lombok:1.18.24'
    implementation 'org.springframework.boot:spring-boot-starter-websocket:2.6.7'
    implementation 'org.springframework:spring-messaging:5.3.20'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools:2.6.7'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.7'
    testImplementation 'org.springframework.security:spring-security-test:5.6.3'

//    implementation 'org.webjars:webjars-locator-core'
//    implementation 'org.webjars:sockjs-client:1.0.2'
//    implementation 'org.webjars:stomp-websocket:2.3.3'
//    implementation 'org.webjars:bootstrap:3.3.7'
//    implementation 'org.webjars:jquery:3.1.1-1'
}

tasks.named('test') {
    useJUnitPlatform()
}

String imageName = "${project.name}"

docker {
    dockerfile file('Dockerfile')
    name imageName
    files bootJar.archivePath
}

dockerRun {
    name "${project.name}"
    image imageName
    ports '80:80'
    arguments '--network=messenger_default'
    env 'security_secret': System.getenv('security_secret'),
            'elasticsearch_host': 'messenger_elastic:9200',
            'elasticsearch_username': 'elastic',
            'elasticsearch_password': System.getenv('elasticsearch_password'),
            'mongodb_host': 'messenger_mongodb',
            'mongodb_username': System.getenv('mongodb_username'),
            'mongodb_password': System.getenv('mongodb_password')
    clean true
}
